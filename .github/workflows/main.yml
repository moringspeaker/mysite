name: Deploy to DigitalOcean

on:
  push:
    branches:
      - api

jobs:
  build_and_push:
    runs-on: ubuntu-22.04

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Frontend Docker images
        uses: docker/build-push-action@v4
        with:
          context: "{{defaultContext}}:frontend"
          push: true
          tags: moringspeaker/frontend:latest
          file: Dockerfile

      - name: Build and push Backend Docker images
        uses: docker/build-push-action@v4
        with:
          context: "{{defaultContext}}:backend"
          push: true
          tags: moringspeaker/backend:latest
          file: Dockerfile


  deploy:
    needs: build_and_push
    runs-on: ubuntu-22.04

    steps:
      - name: Deploy to Droplet
        uses: D3rHase/ssh-command-action@v0.2.2
        with:
          host: ${{ secrets.SSH_HOST }} # Remote server address / ip - required
          port: ${{ secrets.SSH_PORT }} # Remote server port -  Default: 22 - optional
          user: ${{ secrets.SSH_USER }} # Remote server user - required
          private_key: ${{ secrets.SSH_PRIVATE_KEY }} # Private ssh key registered on the remote server - required
          host_fingerprint: ${{secrets.SSH_PUB}}
          command: |
            echo 'hello world' 
            ls -a 
            docker pull moringspeaker/frontend:latest
            docker pull moringspeaker/backend:latest
            docker run -d --name my_frontend --env-file ./.env -p 80:80 moringspeaker/frontend:latest
            docker run -d --name my_backend --env-file ./.env -p 8000:8000 moringspeaker/backend:latest
            echo 'finish container running'

